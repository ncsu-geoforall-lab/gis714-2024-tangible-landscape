#!/usr/bin/env python3

##############################################################################
# AUTHOR(S):    Qasim Adegbite
##############################################################################

# vulnerability.py

"""
Instructions

- Functions intended to run for each scan
  need to start with `run_`, e.g., `run_slope`.

- Do not modify the parameters of the `run_` function
  unless you know what you are doing.
  See optional parameters at:
  https://github.com/tangible-landscape/grass-tangible-landscape/wiki/Running-analyses-and-developing-workflows#python-workflows

- All gs.run_command/read_command/write_command/parse_command
  need to be passed *env* parameter like this: `(..., env=env)`.
"""
import os
import grass.script as gs


def run_floodextent(scanned_elev, env, **kwargs):
    """Run flood extent simulation."""
    increment = 4
    gs.run_command("r.sim.water",
                   elevation=scanned_elev,
                   dx="dx_walnut",
                   dy="dy_walnut",
                   rain_value=50,
                   infil_value=0,
                   man_value=0.05,
                   depth="water_depth_1",
                   discharge="water_discharge_1",
                   nwalk=100000,
                   niterations=30,
                   output_step=increment,
                   flags="t",
                   env=env)


def run_vulnerable(scanned_elev, env, **kwargs):
    """Identify vulnerable areas based on water depth and other criteria."""
    gs.mapcalc("vulnerable = if(water_depth_1 > 0.1 && cfactorbare_1m > 0.2, 1, null())", env=env)


def main():
    """Main function."""
    env = os.environ.copy()
    env["GRASS_OVERWRITE"] = "1"
    elevation = "elev_lid792_1m"
    elev_resampled = "elev_resampled"
    gs.run_command("g.region", raster=elevation, res=4, flags="a", env=env)
    gs.run_command("r.resamp.stats", input=elevation, output=elev_resampled, env=env)
    gs.run_command("v.to.rast", input="vulnerable", output="vulnerable", type="area", flags="t")

    run_floodextent(scanned_elev=elev_resampled, env=env)
    run_vulnerable(scanned_elev=elev_resampled, env=env)


if __name__ == "__main__":
    main()
